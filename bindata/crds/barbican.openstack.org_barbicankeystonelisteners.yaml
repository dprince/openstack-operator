apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: barbicankeystonelisteners.barbican.openstack.org
spec:
  group: barbican.openstack.org
  names:
    kind: BarbicanKeystoneListener
    listKind: BarbicanKeystoneListenerList
    plural: barbicankeystonelisteners
    singular: barbicankeystonelistener
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BarbicanKeystoneListener is the Schema for the barbicankeystonelistener
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BarbicanKeystoneListenerSpec defines the desired state of
              BarbicanKeystoneListener
            properties:
              containerImage:
                description: ContainerImage - Barbican Container Image URL (will be
                  set to environmental default if empty)
                type: string
              customServiceConfig:
                description: |-
                  CustomServiceConfig - customize the service config using this parameter to change service defaults,
                  or overwrite rendered information using raw OpenStack config format. The content gets added to
                  to /etc/<service>/<service>.conf.d directory as a custom config file.
                type: string
              customServiceConfigSecrets:
                description: |-
                  CustomServiceConfigSecrets - customize the service config using this parameter to specify Secrets
                  that contain sensitive service config data. The content of each Secret gets added to the
                  /etc/<service>/<service>.conf.d directory as a custom config file.
                items:
                  type: string
                type: array
              databaseAccount:
                default: barbican
                description: DatabaseAccount - optional MariaDBAccount CR name used
                  for barbican DB, defaults to barbican
                type: string
              databaseHostname:
                type: string
              databaseInstance:
                description: |-
                  MariaDB instance name
                  TODO(dmendiza): Is this comment right?
                  Right now required by the maridb-operator to get the credentials from the instance to create the DB
                  Might not be required in future
                type: string
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: |-
                  ConfigOverwrite - interface to overwrite default config files like e.g. policy.json.
                  But can also be used to add additional files. Those get added to the service config dir in /etc/<service> .
                  TODO: -> implement
                type: object
              enabledSecretStores:
                items:
                  description: This SecretStore type is used by the EnabledSecretStores
                    variable inside the specification.
                  enum:
                  - simple_crypto
                  - pkcs11
                  type: string
                maxItems: 2
                minItems: 1
                type: array
                x-kubernetes-list-type: set
              globalDefaultSecretStore:
                default: simple_crypto
                description: This SecretStore type is used by the EnabledSecretStores
                  variable inside the specification.
                enum:
                - simple_crypto
                - pkcs11
                type: string
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector to target subset of worker nodes running this component. Setting here overrides
                  any global NodeSelector settings within the Barbican CR.
                type: object
              passwordSelectors:
                default:
                  service: BarbicanPassword
                  simplecryptokek: BarbicanSimpleCryptoKEK
                description: PasswordSelectors - Selectors to identify the ServiceUser
                  password from the Secret
                properties:
                  service:
                    default: BarbicanPassword
                    description: Service - Selector to get the barbican service user
                      password from the Secret
                    type: string
                  simplecryptokek:
                    default: SimpleCryptoKEK
                    type: string
                type: object
              pkcs11:
                description: BarbicanPKCS11Template - Includes all common HSM properties
                properties:
                  AESGCMGenerateIV:
                    default: true
                    description: Generate IVs for CKM_AES_GCM mechanism
                    type: boolean
                  HMACKeyType:
                    default: CKK_GENERIC_SECRET
                    description: HMAC Key Type
                    type: string
                  HMACKeygenMechanism:
                    default: CKM_GENERIC_SECRET_KEY_GEN
                    description: HMAC Keygen Mechanism
                    type: string
                  HMACLabel:
                    description: Label to identify HMAC key in the HSM (must not be
                      the same as MKEK label)
                    type: string
                  HMACMechanism:
                    default: CKM_SHA256_HMAC
                    description: HMAC Mechanism. This replaces hsm_keywrap_mechanism
                    type: string
                  MKEKLabel:
                    description: Label to identify master KEK in the HSM (must not
                      be the same as HMAC label)
                    type: string
                  MKEKLength:
                    default: 32
                    description: Length in bytes of master KEK
                    type: integer
                  OSLockingOK:
                    default: false
                    description: Set os_locking_ok
                    type: boolean
                  alwaysSetCKASensitive:
                    default: true
                    description: Always set cka_sensitive
                    type: boolean
                  certificatesMountPoint:
                    description: The mounting point where the certificates will be
                      copied to (e.g., /usr/local/luna/config/certs).
                    type: string
                  certificatesSecret:
                    description: The OpenShift secret that stores the HSM certificates.
                    type: string
                  clientAddress:
                    description: The IP address of the client connecting to the HSM
                      (X.Y.Z.K)
                    type: string
                  encryptionMechanism:
                    default: CKM_AES_GCM
                    description: Secret encryption mechanism
                    type: string
                  keyWrapGenerateIV:
                    default: true
                    description: Generate IVs for the key wrap mechanism
                    type: boolean
                  keyWrapMechanism:
                    default: CKM_AES_KEY_WRAP_KWP
                    description: Key wrap mechanism
                    type: string
                  libraryPath:
                    description: Path to vendor's PKCS11 library
                    type: string
                  loggingLevel:
                    default: 4
                    description: Level of logging, where 0 means "no logging" and
                      7 means "debug".
                    maximum: 7
                    minimum: 0
                    type: integer
                  loginSecret:
                    description: OpenShift secret that stores the password to login
                      to the PKCS11 session
                    type: string
                  serverAddress:
                    description: The HSM's IPv4 address (X.Y.Z.K)
                    type: string
                  slotId:
                    description: |-
                      One of TokenSerialNumber, TokenLabels or SlotId must
                      be defined.  SlotId is used if none of the others is defined
                    type: string
                  tokenLabels:
                    description: |-
                      Token labels used to identify the token to be used.
                      One of TokenSerialNumber, TokenLabels or SlotId must
                      be specified. TokenLabels takes priority over SlotId.
                      This can be a comma separated string of labels
                    type: string
                  tokenSerialNumber:
                    description: |-
                      Token serial number used to identify the token to be used.
                      One of TokenSerialNumber, TokenLabels or SlotId must
                      be defined.  TokenSerialNumber takes priority over
                      TokenLabels and SlotId
                    type: string
                  type:
                    description: 'A string containing the HSM type (currently supported:
                      "luna").'
                    type: string
                required:
                - HMACLabel
                - MKEKLabel
                - libraryPath
                - loginSecret
                - serverAddress
                - type
                type: object
              rabbitMqClusterName:
                default: rabbitmq
                description: |-
                  RabbitMQ instance name
                  Needed to request a transportURL that is created and used in Barbican
                type: string
              replicas:
                default: 1
                description: Replicas of Barbican API to run
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: |-
                  Resources - Compute Resources required by this service (Limits/Requests).
                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              secret:
                default: osp-secret
                description: Secret containing all passwords / keys needed
                type: string
              serviceAccount:
                description: ServiceAccount - service account name used internally
                  to provide Barbican services the default SA name
                type: string
              serviceUser:
                default: barbican
                description: ServiceUser - optional username used for this service
                  to register in keystone
                type: string
              simpleCryptoBackendSecret:
                default: osp-secret
                description: Secret containing the Key Encryption Key (KEK) used for
                  the Simple Crypto backend
                type: string
              tls:
                description: TLS - Parameters related to the TLS
                properties:
                  caBundleSecretName:
                    description: CaBundleSecretName - holding the CA certs in a pre-created
                      bundle file
                    type: string
                type: object
              transportURLSecret:
                type: string
            required:
            - containerImage
            - databaseHostname
            - databaseInstance
            - rabbitMqClusterName
            - serviceAccount
            type: object
          status:
            description: BarbicanKeystoneListenerStatus defines the observed state
              of BarbicanKeystoneListener
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              databaseHostname:
                description: Barbican Database Hostname
                type: string
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              readyCount:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  ReadyCount of barbican API instances
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
