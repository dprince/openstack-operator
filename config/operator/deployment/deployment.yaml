apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-operator
    openstack.org/operator-name: openstack
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-operator
  namespace: system
  labels:
    control-plane: controller-operator
    openstack.org/operator-name: openstack-controller
spec:
  selector:
    matchLabels:
      openstack.org/operator-name: openstack-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: operator
      labels:
        control-plane: controller-operator
        openstack.org/operator-name: openstack-controller
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /operator
        args:
        - --leader-elect
        env:
        - name: OPENSTACK_RELEASE_VERSION
          value: 0.0.1
        - name: ENABLE_WEBHOOKS
          value: false
        - name: OPERATOR_IMAGE_URL
          value: quay.io/openstack-k8s-operators/openstack-operator:latest
        image: controller:latest
        name: operator
        securityContext:
          allowPrivilegeEscalation: false
        # TODO(user): uncomment for common cases that do not require escalating privileges
        # capabilities:
        #   drop:
        #     - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
      serviceAccountName: controller-operator
      terminationGracePeriodSeconds: 10
